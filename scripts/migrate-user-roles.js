const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function migrateUserRoles() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.user.findMany();
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);

    const updates = [];

    for (const user of users) {
      let newRole;
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–æ–ª–∏ –≤ –Ω–æ–≤—ã–µ
      switch (user.role) {
        case 'ADMIN':
          newRole = 'ADMINISTRATOR';
          break;
        case 'MANAGER':
          newRole = 'OCC_MANAGER';
          break;
        case 'EMPLOYEE':
          newRole = 'SUPERVISOR';
          break;
        default:
          console.log(`‚ö†Ô∏è  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name}: ${user.role}`);
          continue;
      }

      if (newRole !== user.role) {
        updates.push({
          id: user.id,
          name: user.name,
          oldRole: user.role,
          newRole: newRole
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await prisma.user.update({
          where: { id: user.id },
          data: { role: newRole }
        });

        console.log(`‚úÖ ${user.name}: ${user.role} ‚Üí ${newRole}`);
      } else {
        console.log(`‚úì ${user.name}: —Ä–æ–ª—å —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–∞ (${user.role})`);
      }
    }

    console.log(`\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
    console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ä–æ–ª–µ–π: ${updates.length}`);
    
    if (updates.length > 0) {
      console.log('\nüìã –°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:');
      updates.forEach(update => {
        console.log(`   ‚Ä¢ ${update.name}: ${update.oldRole} ‚Üí ${update.newRole}`);
      });
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
migrateUserRoles()
  .then(() => {
    console.log('\n‚ú® –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('üí• –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π:', error);
    process.exit(1);
  });
